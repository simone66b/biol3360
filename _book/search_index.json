[["index.html", "BIOL3360 Welcome to BIOL3360!", " BIOL3360 Simone Blomberg Welcome to BIOL3360! "],["chap1.html", "1 BIOL3360: Analysis and Communication of Biological Data 1.1 Course description 1.2 Course Delivery 1.3 Textbooks and Resources 1.4 Assessment 1.5 Goals and expectations 1.6 Course communication 1.7 And finally…", " 1 BIOL3360: Analysis and Communication of Biological Data 1.1 Course description As scientists, we need to be able to collect, analyse and interpret data in terms of statistical and mathematical models. We also need to be able to communicate our findings to other scientists, grant funding bodies, government departments and the general public. This course is designed to give you these skills. We intend that the skills you gain in this course will serve you well in your future careers and studies in biology, or indeed any other field of science. 1.2 Course Delivery The course is designed with three ``modules:’’ Statistical Modelling, Dynamic Modelling and Communication. Statistical Modelling is taught by Simone Blomberg before the mid-semester break. The first three weeks are devoted to gaining R programming skills (no statistics taught in these weeks). Dynamic Modelling is taught by Jan Engelstaedter after the mid-semester break, and the Communication module is run for the entire semester by Louise Kuchel. The course is structured into two ``workshops,’’ one two-hour and one three hour, for a total of 5 contact hours during the week. We expect you to spend another 5 hours on the content outside of contact hours. 1.3 Textbooks and Resources The textbook for R programming will be, The Art of R Programming by Matloff. This is a good introduction which emphasises good programming habits. We will work through several chapters. There is no set textbook for the Statistical Modelling module. However, there are many books which cover the material. My (Simone’s) favorites are: Mixed-Effects Modelling in S and S-PLUS Generalized Linear Models These books will cover the theory. We will discuss the theory and work through examples in R in the workshops. 1.4 Assessment There will be fortnightly quizzes throughout the course, and one ``practical’’ exam for the communication module. There are no mid-semester or final exams. 1.5 Goals and expectations The course can be completed to a high level, if you work diligently. We expect you to come to the workshops (which will not necessarily be recorded). We expect you to prepare for each quiz. We expect you to use your initiative, intelligence, self-discipline, curiosity and vested interest to take responsibility for your own learning. If you start to have trouble, we expect you to ask for help from us, to get you back on track. Feel free to contact any of us by email, but do so sparingly, and be courteous and polite. Ask questions (publicly, privately, anonymously) if you don’t understand a concept. If we can improve something about our teaching or the course, let us know early because we will fix it if we can (SECaTs are good for us and for students next year, but they occur too late to benefit you). If you have a problem, let us know early and propose a solution if possible. 1.6 Course communication We will provide an Ed Discussion Board where you can ask questions of us, and your fellow students, anonymously if need be. Feel free to make an appointment to meet us personally outside of the workshops. We are happy to provide face-to-face advice. Our email addresses are: Simone s.blomberg1@uq.edu.au Jan j.engelstaedter@uq.edu.au Louise l.kuchel@uq.edu.au 1.7 And finally… Good luck with the course! We hope you enjoy it! Simone Blomberg. "],["chap2.html", "2 Week 1: R Programming I 2.1 Why Programming? Why Statistics? Why R? 2.2 Why Statistics? 2.3 Why R?", " 2 Week 1: R Programming I 2.1 Why Programming? Why Statistics? Why R? Computer programming has become an increasingly valued skill for biologists. Computer programming allows us to express complicated ideas in a formal way such that they can be analysed and evaluated using a computer. Thus, the computer “keeps us honest” with regard to our ideas. If we can’t explain our scientific problem to a computer, we haven’t thought it through well enough. Indeed, since Alan Turing discovered that a computer can emulate any process that can be described by an algorithm, we might ask, “What are computers for?” Many of you will be used to thinking that computers are used for word processing, spreadsheets, email, Instagram etc. and that is true. But I think the answer to the question goes much deeper than this. The best answer that I can think of is, “Computers are machines for thinking with.” We use computers as an aid to thinking about the world. Computers can take the drudgery out of many scientific processes and leave us with room to think about the “big” questions. Computers are used in many situations in biology. In this course, we will be concerned with using computers to statistically and dynamically model aspects of data and biological processes. 2.2 Why Statistics? The biological world is messy. There is no way we can treat organisms the way atoms and molecules are treated in physics and chemistry. Even if we knew all the physical and chemical properties of all the molecules in an organism, we still could not predict accurately what that organism looks like or how it will behave so we need to use models that incorporate uncertainty and randomness in a principled way. This is why we do statistics. Statistical models have probability “built in.” Statistical models allow us to draw conclusions from data and form a way of thinking about organisms that takes randomness and uncertainty into account. Statistics is at the very heart of biology: the mechanism of natural selection requires that organisms differ, and differences among organisms are ultimately due to the random process of mutation. Mutation is necessary for selection to work. Thus, statistical models help us to understand how and why organisms have evolved. We will be modelling the properties of data. Data are crucial to the scientific process and it is important to treat them fairly and gently. We will be using a variety of statistical methods to study data. From previous courses, you may be under the impression that statistics is about performing various tests on your data to draw conclusions. It is true that this is one aspect of statistics. But at a more fundamental level, we seek a good model for our data. After obtaining a good model, we find that the statistical tests are easy. They pretty much look after themselves. 2.3 Why R? R is a computer language, similar in many respects to other computer languages that you may have heard of, such as Python, C, and C++. There are many reasons why R is the language of choice for doing statistical modelling. It is free (both free as in “free beer” and free as in “free speech”). It was originally written by statisticians for statisticians so there are many aspects of the language that are ideally suited for doing statistical modelling. The language is relatively easy to read, write, and understand. There are thousands of add-on packages available for R that can be used to do many diverse forms of analysis. R has become the “lingua franca” of statistics. R is used by research statisticians to develop new methods, so chances are that you will have access to the latest methods for doing data analysis. Other packages can take many years to become up to date with well-known methods. Having a good knowledge of programming in R is a skill that employers will find valuable. Even if you don’t end up using R, and instead use some other software, you will find that learning a new system is made much easier because you already have experience with R. Like spoken languages, knowing one language can help you learn another. You can compare and contrast. Often you will find that other systems for statistical analysis are very inferior to R! "],["chap3.html", "3 Beginning R Programming 3.1 The Workspace Setup 3.2 First steps", " 3 Beginning R Programming 3.1 The Workspace Setup Obtain R from the Comprehensive R Archive Network (CRAN) and install it in the usual way that you install other software. You can use R from the command line in a terminal by typing R (Mac and Linux) or by clicking on the R icon (Windows). However, using R in this way is usually quite tortuous. It is much better to use an Interactive Development Environment (IDE). We shall use RStudio as our IDE. Download and install RStudio from the Posit web site. Make sure you install the free version. After installation, start it up in the usual way for your system. An important point to note: RStudio is not R!. RStudio is merely an interface to R. You should normally not need to cite RStudio in reports etc. Just cite R. To cite R, type citation() at the R prompt. It will output a citation that you can paste into your reports. Open RStudio by clicking on the RStudio icon. A window should pop up with three panes. The pane on the left is the R console. This is where R output will appear. You can also type commands right in there. Minimise the R console and you should see another pane: This is the source pane. You can open new R documents there and edit your code. Make sure you save your code with the extension .R. That will allow RStudio to recognise your R file and give you text coloration and other goodies. The two panes on the left hand side of the window include facilities for examining your workspace environment, viewing plots and help files and a number of other things. Now we are ready to start programming. 3.2 First steps Go to the top-left pane and type. cat(&quot;Hello World!&quot;) Press the run button at the top right of the pane. You should see the output come out in the Console pane. Congratulations! This is your first R program. A “Hello World” program is traditionally the first program a new programmer writes on a new system that they are learning. You have joined the ranks of computer programmers! Go to The Art of R Programming and read through the text up to page "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
